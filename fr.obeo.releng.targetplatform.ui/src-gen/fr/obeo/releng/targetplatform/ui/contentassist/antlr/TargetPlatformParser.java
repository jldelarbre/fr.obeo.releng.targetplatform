/*
* generated by Xtext
*/
package fr.obeo.releng.targetplatform.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.obeo.releng.targetplatform.services.TargetPlatformGrammarAccess;

public class TargetPlatformParser extends AbstractContentAssistParser {
	
	@Inject
	private TargetPlatformGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.obeo.releng.targetplatform.ui.contentassist.antlr.internal.InternalTargetPlatformParser createParser() {
		fr.obeo.releng.targetplatform.ui.contentassist.antlr.internal.InternalTargetPlatformParser result = new fr.obeo.releng.targetplatform.ui.contentassist.antlr.internal.InternalTargetPlatformParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTargetContentAccess().getAlternatives(), "rule__TargetContent__Alternatives");
					put(grammarAccess.getCompositeStringPartAccess().getAlternatives(), "rule__CompositeStringPart__Alternatives");
					put(grammarAccess.getIUAccess().getAlternatives_1_1(), "rule__IU__Alternatives_1_1");
					put(grammarAccess.getIUAccess().getAlternatives_1_1_0(), "rule__IU__Alternatives_1_1_0");
					put(grammarAccess.getVersionAccess().getAlternatives_1_2_2_1(), "rule__Version__Alternatives_1_2_2_1");
					put(grammarAccess.getVersionRangeAccess().getAlternatives(), "rule__VersionRange__Alternatives");
					put(grammarAccess.getVersionRangeAccess().getAlternatives_0_0(), "rule__VersionRange__Alternatives_0_0");
					put(grammarAccess.getVersionRangeAccess().getAlternatives_0_4(), "rule__VersionRange__Alternatives_0_4");
					put(grammarAccess.getOptionAccess().getAlternatives(), "rule__Option__Alternatives");
					put(grammarAccess.getTargetPlatformAccess().getGroup(), "rule__TargetPlatform__Group__0");
					put(grammarAccess.getOptionsAccess().getGroup(), "rule__Options__Group__0");
					put(grammarAccess.getOptionsAccess().getGroup_2(), "rule__Options__Group_2__0");
					put(grammarAccess.getEnvironmentAccess().getGroup(), "rule__Environment__Group__0");
					put(grammarAccess.getEnvironmentAccess().getGroup_3(), "rule__Environment__Group_3__0");
					put(grammarAccess.getVarDefinitionAccess().getGroup(), "rule__VarDefinition__Group__0");
					put(grammarAccess.getCompositeStringAccess().getGroup(), "rule__CompositeString__Group__0");
					put(grammarAccess.getCompositeStringAccess().getGroup_2(), "rule__CompositeString__Group_2__0");
					put(grammarAccess.getVarCallAccess().getGroup(), "rule__VarCall__Group__0");
					put(grammarAccess.getIncludeDeclarationAccess().getGroup(), "rule__IncludeDeclaration__Group__0");
					put(grammarAccess.getLocationAccess().getGroup(), "rule__Location__Group__0");
					put(grammarAccess.getLocationAccess().getGroup_1_1(), "rule__Location__Group_1_1__0");
					put(grammarAccess.getLocationAccess().getGroup_2(), "rule__Location__Group_2__0");
					put(grammarAccess.getLocationAccess().getGroup_2_1(), "rule__Location__Group_2_1__0");
					put(grammarAccess.getLocationAccess().getGroup_2_1_2(), "rule__Location__Group_2_1_2__0");
					put(grammarAccess.getIUAccess().getGroup(), "rule__IU__Group__0");
					put(grammarAccess.getIUAccess().getGroup_1(), "rule__IU__Group_1__0");
					put(grammarAccess.getIUAccess().getGroup_1_0(), "rule__IU__Group_1_0__0");
					put(grammarAccess.getVersionAccess().getGroup(), "rule__Version__Group__0");
					put(grammarAccess.getVersionAccess().getGroup_1(), "rule__Version__Group_1__0");
					put(grammarAccess.getVersionAccess().getGroup_1_2(), "rule__Version__Group_1_2__0");
					put(grammarAccess.getVersionAccess().getGroup_1_2_2(), "rule__Version__Group_1_2_2__0");
					put(grammarAccess.getVersionRangeAccess().getGroup_0(), "rule__VersionRange__Group_0__0");
					put(grammarAccess.getTargetPlatformAccess().getNameAssignment_1(), "rule__TargetPlatform__NameAssignment_1");
					put(grammarAccess.getTargetPlatformAccess().getContentsAssignment_2(), "rule__TargetPlatform__ContentsAssignment_2");
					put(grammarAccess.getOptionsAccess().getOptionsAssignment_1(), "rule__Options__OptionsAssignment_1");
					put(grammarAccess.getOptionsAccess().getOptionsAssignment_2_1(), "rule__Options__OptionsAssignment_2_1");
					put(grammarAccess.getEnvironmentAccess().getEnvAssignment_2(), "rule__Environment__EnvAssignment_2");
					put(grammarAccess.getEnvironmentAccess().getEnvAssignment_3_1(), "rule__Environment__EnvAssignment_3_1");
					put(grammarAccess.getVarDefinitionAccess().getConstantAssignment_1(), "rule__VarDefinition__ConstantAssignment_1");
					put(grammarAccess.getVarDefinitionAccess().getNameAssignment_2(), "rule__VarDefinition__NameAssignment_2");
					put(grammarAccess.getVarDefinitionAccess().getValueAssignment_4(), "rule__VarDefinition__ValueAssignment_4");
					put(grammarAccess.getCompositeStringAccess().getStringPartsAssignment_1(), "rule__CompositeString__StringPartsAssignment_1");
					put(grammarAccess.getCompositeStringAccess().getStringPartsAssignment_2_1(), "rule__CompositeString__StringPartsAssignment_2_1");
					put(grammarAccess.getVarCallAccess().getVarNameAssignment_1(), "rule__VarCall__VarNameAssignment_1");
					put(grammarAccess.getStaticStringAccess().getValueAssignment(), "rule__StaticString__ValueAssignment");
					put(grammarAccess.getIncludeDeclarationAccess().getCompositeImportURIAssignment_1(), "rule__IncludeDeclaration__CompositeImportURIAssignment_1");
					put(grammarAccess.getLocationAccess().getIDAssignment_1_0(), "rule__Location__IDAssignment_1_0");
					put(grammarAccess.getLocationAccess().getDiscardStateAssignment_1_1_2(), "rule__Location__DiscardStateAssignment_1_1_2");
					put(grammarAccess.getLocationAccess().getCompositeUriAssignment_1_2(), "rule__Location__CompositeUriAssignment_1_2");
					put(grammarAccess.getLocationAccess().getOptionsAssignment_2_1_1(), "rule__Location__OptionsAssignment_2_1_1");
					put(grammarAccess.getLocationAccess().getOptionsAssignment_2_1_2_1(), "rule__Location__OptionsAssignment_2_1_2_1");
					put(grammarAccess.getLocationAccess().getIusAssignment_2_2(), "rule__Location__IusAssignment_2_2");
					put(grammarAccess.getIUAccess().getIDAssignment_0(), "rule__IU__IDAssignment_0");
					put(grammarAccess.getIUAccess().getVersionAssignment_1_1_0_0(), "rule__IU__VersionAssignment_1_1_0_0");
					put(grammarAccess.getIUAccess().getVersionAssignment_1_1_0_1(), "rule__IU__VersionAssignment_1_1_0_1");
					put(grammarAccess.getIUAccess().getVarVersionAssignment_1_1_1(), "rule__IU__VarVersionAssignment_1_1_1");
					put(grammarAccess.getLocationAccess().getUnorderedGroup_1(), "rule__Location__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.obeo.releng.targetplatform.ui.contentassist.antlr.internal.InternalTargetPlatformParser typedParser = (fr.obeo.releng.targetplatform.ui.contentassist.antlr.internal.InternalTargetPlatformParser) parser;
			typedParser.entryRuleTargetPlatform();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TargetPlatformGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TargetPlatformGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
